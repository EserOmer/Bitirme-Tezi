@page "/login"
@layout AuthLayout
@inject Client.Security.AuthStateProvider authProvider
@using Client.AuthDtos
@using Client.Security


@inject NavigationManager navManager

<head>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>

<center class="login-page-container mb-1 mt-4">
 
        <EditForm Model="model" OnValidSubmit="@( () => Authenticate())" autocomplete="off">
            <DataAnnotationsValidator />
            <Card Title="JetForm Anket Uygulamasi" Class="bg-info"  Style="width:300px;">
                <Body>
                    <div class="form-group">
                        <div class="input-group">
                            <InputText @bind-Value="model.Email" type="text"
                                       class="form-control"
                                       placeholder="Email"
                                       maxlength="256" />
                            <div class="input-group-append">
                                <div class="input-group-text icons-box">
                                    <span class="material-icons">person</span>
                                </div>
                            </div>
                        </div>
                        <div class="validation-message">
                            <ValidationMessage For="@(()=> model.Email)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            <InputText @bind-Value="model.Password" type="password"
                                       class="form-control"
                                       placeholder="password"
                                       maxlength="32" />
                            <div class="input-group-append">
                                <div class="input-group-text icons-box">
                                    <span class="material-icons">lock</span>
                                </div>
                            </div>
                        </div>
                        <div class="validation-message">
                            <ValidationMessage For="@(()=> model.Password)" />
                        </div>
                    </div>
                    <div class="form-group row login-btn mr-0 ml-0 pr-0 pl-0">
                        <button type="submit"
                                class="btn btn-primary btn-block">
                            Giriş Yap
                        </button>
                    </div> 
                    <div class="form-group row login-btn mr-0 ml-0 pr-0 pl-0">
                        <button @onclick="@Register" type="button"
                                class="btn btn-primary btn-block">
                           Üye Ol
                        </button>
                    </div>
                </Body>
            </Card>
            <br />
        </EditForm>



    @if (Error != null)
    {
        <h4>@Error</h4>
    }

</center>



@code {

    LoginDto model = new LoginDto();
    string Error;

    async Task Authenticate()
    {
        

        try
        {
            await authProvider.MarkUserAsAuthenticated(model);

            navManager.NavigateTo("/");

        }
        catch (ResponseError ex)
        {
            Error = ex.Message;
            this.StateHasChanged();
        }

    }

    async Task Register()
    {
        navManager.NavigateTo("register");
    }
    RenderFragment titleTemplate =@<div><Icon Type="credit-card" Theme="outline" /> Title is Template</div>;

}


